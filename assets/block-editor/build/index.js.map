{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wp-last-modified-info/./assets/block-editor/src/components/post-modified-field/index.js","webpack://wp-last-modified-info/./assets/block-editor/src/components/post-modified-front-control/index.js","webpack://wp-last-modified-info/./assets/block-editor/src/components/post-modified-toggle/index.js","webpack://wp-last-modified-info/external window [\"wp\",\"components\"]","webpack://wp-last-modified-info/external window [\"wp\",\"data\"]","webpack://wp-last-modified-info/external window [\"wp\",\"date\"]","webpack://wp-last-modified-info/external window [\"wp\",\"editPost\"]","webpack://wp-last-modified-info/external window [\"wp\",\"element\"]","webpack://wp-last-modified-info/external window [\"wp\",\"i18n\"]","webpack://wp-last-modified-info/external window [\"wp\",\"plugins\"]","webpack://wp-last-modified-info/webpack/bootstrap","webpack://wp-last-modified-info/webpack/runtime/compat get default export","webpack://wp-last-modified-info/webpack/runtime/define property getters","webpack://wp-last-modified-info/webpack/runtime/hasOwnProperty shorthand","webpack://wp-last-modified-info/webpack/runtime/make namespace object","webpack://wp-last-modified-info/./assets/block-editor/src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { useSelect, useDispatch } from \"@wordpress/data\";\nimport { PluginPostStatusInfo } from '@wordpress/edit-post';\nimport { dateI18n, __experimentalGetSettings } from \"@wordpress/date\";\nimport { DateTimePicker, Dropdown, Button } from \"@wordpress/components\";\n\nconst PostModifiedField = () => {\n    const settings = __experimentalGetSettings();\n    const dateTimeFormat = settings.formats.datetime;\n    const is12HourFormat = ( format ) => {\n        return /(?:^|[^\\\\])[aAgh]/.test( format );\n    }\n\n    const { editedModified, currentModified, postStatus, postMeta } = useSelect( ( select ) => {\n        return {\n            editedModified: select( 'core/editor' ).getEditedPostAttribute( 'modified' ),\n            currentModified: select( 'core/editor' ).getCurrentPostAttribute( 'modified' ),\n            postStatus: select( 'core/editor' ).getEditedPostAttribute( 'status' ),\n            postMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n        };\n    } );\n\n    const { editPost } = useDispatch( 'core/editor', [ editedModified ] );\n\n    if ( [ 'auto-draft', 'future' ].includes( postStatus ) ) {\n        return null;\n    }\n\n    return (\n        <PluginPostStatusInfo>\n            { postMeta._lmt_disableupdate == 'yes' ? (\n                <>\n                    <span>{ __( 'Last Modified', 'wp-last-modified-info' ) }</span>\n                    <b>{ dateI18n( dateTimeFormat, currentModified ) }</b>\n                </>\n            ) : (\n                <>\n                    <span>{ __( 'Modified', 'wp-last-modified-info' ) }</span>\n                    <Dropdown\n                        position=\"bottom left\"\n                        contentClassName=\"edit-post-post-schedule__dialog\"\n                        renderToggle={ ( { onToggle, isOpen } ) => (\n                            <Button\n                                className=\"edit-post-post-schedule__toggle\"\n                                onClick={ onToggle }\n                                aria-expanded={ isOpen }\n                                isTertiary\n                            >\n                                { dateI18n( dateTimeFormat, editedModified ) }\n                            </Button>\n                        ) }\n                        renderContent={ () => (\n                            <DateTimePicker\n                                currentDate={ editedModified }\n                                onChange={ ( modified ) => { editPost( { modified } ) } }\n                                is12Hour={ is12HourFormat( settings.formats.time ) }\n                            />\n                        ) }\n                    />\n                </>\n            ) }\n        </PluginPostStatusInfo>\n    );\n};\n\nexport default PostModifiedField;","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { PluginDocumentSettingPanel} from '@wordpress/edit-post';\nimport { CheckboxControl, PanelRow } from '@wordpress/components';\n\nconst PostModifiedFrontControl = () => {\n    const { postStatus, postType, postMeta } = useSelect( ( select ) => {\n\t\treturn {\n            postStatus: select( 'core/editor' ).getEditedPostAttribute( 'status' ),\n            postType: select( 'core/editor' ).getCurrentPostType(),\n\t\t\tpostMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n\t\t};\n\t} );\n\n    const { editPost } = useDispatch( 'core/editor', [ postMeta._lmt_disable ] );\n\n    if ( [ 'auto-draft', 'future' ].includes( postStatus ) ) {\n        return null;\n    }\n\n    if ( ! wplmiBlockEditor.postTypes.includes( postType ) || ! wplmiBlockEditor.isEnabled ) {\n        return null;\n    }\n    \n    return (\n        <PluginDocumentSettingPanel name=\"modified-info\" title={ __( 'Modified Info', 'wp-last-modified-info' ) } className=\"wplmi-panel\" icon={null}>\n            <PanelRow>\n                <CheckboxControl\n                    label={ __( 'Hide Modified Info on Frontend', 'wp-last-modified-info' ) }\n                    checked={ postMeta._lmt_disable == 'yes' ? true : false }\n                    onChange={ () => editPost( { meta: { _lmt_disable: postMeta._lmt_disable == 'yes' ? 'no' : 'yes' } } ) }\n                />\n            </PanelRow>\n        </PluginDocumentSettingPanel>\n    );\n};\n\nexport default PostModifiedFrontControl;","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { FormToggle } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { PluginPostStatusInfo } from '@wordpress/edit-post';\n\nconst PostModifiedDateToggle = () => {\n    const { postStatus, postMeta } = useSelect( ( select ) => {\t\t\n\t\treturn {\n            postStatus: select( 'core/editor' ).getEditedPostAttribute( 'status' ),\n\t\t\tpostMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n\t\t};\n\t} );\n\n    const { editPost } = useDispatch( 'core/editor', [ postMeta._lmt_disableupdate ] );\n\n    if ( [ 'auto-draft', 'future' ].includes( postStatus ) ) {\n        return null;\n    }\n\n    return (\n        <PluginPostStatusInfo>\n            <span>{ __( 'Lock Modified Date', 'wp-last-modified-info' ) }</span>\n            <FormToggle\n                checked={ postMeta._lmt_disableupdate == 'yes' ? true : false }\n                onChange={ () => editPost( { meta: { _lmt_disableupdate: postMeta._lmt_disableupdate == 'yes' ? 'no' : 'yes' } } ) }\n            />\n        </PluginPostStatusInfo>\n    );\n};\n\nexport default PostModifiedDateToggle;","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"date\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { registerPlugin } from '@wordpress/plugins';\n\n/**\n * Internal dependencies\n */\nimport PostModifiedDateChange from './components/post-modified-field';\nimport PostModifiedDateToggle from './components/post-modified-toggle';\nimport PostModifiedFrontControl from './components/post-modified-front-control';\n\nconst WPLastModifiedInfo = () => {\n    return (\n        <>\n            <PostModifiedDateChange />\n            <PostModifiedDateToggle />\n            <PostModifiedFrontControl />\n        </>\n    );\n};\n\nregisterPlugin( 'wp-last-modified-info', {\n    render: WPLastModifiedInfo,\n    icon: null,\n} );\n"],"names":["__","useSelect","useDispatch","PluginPostStatusInfo","dateI18n","__experimentalGetSettings","DateTimePicker","Dropdown","Button","PostModifiedField","settings","dateTimeFormat","formats","datetime","is12HourFormat","format","test","editedModified","currentModified","postStatus","postMeta","select","getEditedPostAttribute","getCurrentPostAttribute","editPost","includes","_lmt_disableupdate","onToggle","isOpen","modified","time","PluginDocumentSettingPanel","CheckboxControl","PanelRow","PostModifiedFrontControl","postType","getCurrentPostType","_lmt_disable","wplmiBlockEditor","postTypes","isEnabled","meta","FormToggle","PostModifiedDateToggle","registerPlugin","PostModifiedDateChange","WPLastModifiedInfo","render","icon"],"sourceRoot":""}